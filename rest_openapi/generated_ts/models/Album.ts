/* tslint:disable */
/* eslint-disable */
/**
 * Albums API
 * This service provides API to manage albums.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotesV1Note } from './NotesV1Note';
import {
    NotesV1NoteFromJSON,
    NotesV1NoteFromJSONTyped,
    NotesV1NoteToJSON,
} from './NotesV1Note';

/**
 * 
 * @export
 * @interface Album
 */
export interface Album {
    /**
     * Album author, can be empty for multi-artist compilations.
     * @type {string}
     * @memberof Album
     */
    artist?: string;
    /**
     * ID is a unique string that determines album.
     * @type {string}
     * @memberof Album
     */
    id: string;
    /**
     * Series of notes.
     * @type {Array<NotesV1Note>}
     * @memberof Album
     */
    notes?: Array<NotesV1Note> | null;
    /**
     * Price in USD.
     * @type {number}
     * @memberof Album
     */
    price?: number;
    /**
     * Title of the album.
     * @type {string}
     * @memberof Album
     */
    title: string;
}

/**
 * Check if a given object implements the Album interface.
 */
export function instanceOfAlbum(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function AlbumFromJSON(json: any): Album {
    return AlbumFromJSONTyped(json, false);
}

export function AlbumFromJSONTyped(json: any, ignoreDiscriminator: boolean): Album {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'artist': !exists(json, 'artist') ? undefined : json['artist'],
        'id': json['id'],
        'notes': !exists(json, 'notes') ? undefined : (json['notes'] === null ? null : (json['notes'] as Array<any>).map(NotesV1NoteFromJSON)),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'title': json['title'],
    };
}

export function AlbumToJSON(value?: Album | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'artist': value.artist,
        'id': value.id,
        'notes': value.notes === undefined ? undefined : (value.notes === null ? null : (value.notes as Array<any>).map(NotesV1NoteToJSON)),
        'price': value.price,
        'title': value.title,
    };
}

