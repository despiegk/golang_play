/* tslint:disable */
/* eslint-disable */
/**
 * Albums API
 * This service provides API to manage albums.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RestErrResponse
 */
export interface RestErrResponse {
    /**
     * Application-specific error code.
     * @type {number}
     * @memberof RestErrResponse
     */
    code?: number;
    /**
     * Application context.
     * @type {{ [key: string]: any; }}
     * @memberof RestErrResponse
     */
    context?: { [key: string]: any; };
    /**
     * Error message.
     * @type {string}
     * @memberof RestErrResponse
     */
    error?: string;
    /**
     * Status text.
     * @type {string}
     * @memberof RestErrResponse
     */
    status?: string;
}

/**
 * Check if a given object implements the RestErrResponse interface.
 */
export function instanceOfRestErrResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RestErrResponseFromJSON(json: any): RestErrResponse {
    return RestErrResponseFromJSONTyped(json, false);
}

export function RestErrResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestErrResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'context': !exists(json, 'context') ? undefined : json['context'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function RestErrResponseToJSON(value?: RestErrResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'context': value.context,
        'error': value.error,
        'status': value.status,
    };
}

